# This is a grammar of such grammar written with the same grammar.

Goal    : Definitions $

# definitions list can be started either with definition
# or with separator

Definitions(first)  : Definition DefinitionsContinue
Definitions(only)   : Definition
Definitions         : DefinitionsContinue

DefinitionsContinue(list)   : DefinitionsContinue NextDefinition
DefinitionsContinue(first)  : NextDefinition

NextDefinition          : .separator Definition
NextDefinition(empty)   : .separator

Definition  : Define        # DEFINE: `&name  : /regexp/`
Definition  : Option        # Option: `-name: value`
Definition  : Rule          # normal rule

Define  : "&" name ":" regexp

Option  : "-" name ":" OptionValue

OptionValue(str): String
OptionValue(re) : regexp

Rule    : RuleSubjectTagged ":" RuleDefinition

RuleSubjectTagged(tag)  : SymbolNamed "(" name ")"
RuleSubjectTagged       : SymbolNamed

RuleDefinition(regexp)  : regexp
RuleDefinition(main)    : Symbols "$"
RuleDefinition          : Symbols

Symbols(list)   : Symbols Symbol
Symbols(first)  : Symbol

Symbol(name)    : SymbolNamed
Symbol(string)  : String

SymbolNamed(hidden) : "." name
SymbolNamed(normal) : name

String  : qstring
String  : qqstring
String  : angle_string

separator   : /(?:;|\R)++/

# strings has no any escaping
qstring     : /'[^'\v]*'/
qqstring    : /"[^"\v]*"/
angle_string: /<[^<>\v]*>/

regexp      : /\/(?:[^\v\/\\]++|\\[^\v])++\//
name        : /(?i)[a-z][a-z_0-9]*+/

-ws : /\h+/
-ws : /#[^\v]++/
